@model HomePhysio.ViewModel.LoginViewModel
@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> signInManager

@{ Layout = null;}
<link href="~/css/logincss/util.css" rel="stylesheet" />
<link href="~/css/logincss/main.css" rel="stylesheet" />
<link href="~/fontsLogin/font-awesome-4.7.0/css/font-awesome.css" rel="stylesheet" />
<link href="~/fontsLogin/Linearicons-Free-v1.0.0/icon-font.min.css" rel="stylesheet" />

<body style="background-color: #666666;">
    <div style="background-color: #6675df; color: white; text-align:center; font-family:'Times New Roman', Times, serif; ">
        @{
            var schemes = await signInManager.GetExternalAuthenticationSchemesAsync();// all the schemes in start-up Eg..facebook,microsoftaccount
            var loginProivders = schemes.ToList();
        }
        @if (loginProivders.Count() > 0)
        {

        
                <form asp-controller="Account" asp-action="ExternalLogin" asp-route-returnUrl="@ViewData["ReturnUrl"]" method="post" role="form">
                    <div>
                        <p>
                            @foreach (var provider in loginProivders)
                            {
                                <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name"
                                        title="Log in using your @provider.Name account">
                                    Login using @provider.Name .
                                </button>
                            }
                        </p>
                    </div>
                </form>
         

        }
    </div>
    <div class="limiter">
        <div class="container-login100">
            <div class="wrap-login100">

                <form asp-controller="Account" asp-action="Login" asp-route-returnurl="@ViewData["ReturnUrl"]" method="post" role="form" class="login100-form validate-form">
                    <span class="login100-form-title p-b-43">
                        Login
                    </span>

                    <div asp-validation-summary="All" class="text-danger"></div>

                    <div class="form-group">
                        <div class="wrap-input100 validate-input" data-validate="Valid email is required: ex@abc.xyz">
                            <input asp-for="Email" class="input100 form-control" />

                            <span class="focus-input100"></span>
                            <span class="label-input100">Email</span>

                        </div>


                        <div class="wrap-input100 validate-input" data-validate="Password is required">
                            <input asp-for="Password" class="input100 form-control" />

                            <span class="focus-input100"></span>
                            <span class="label-input100">Password</span>
                        </div>


                    </div>

                    <div class="flex-sb-m w-full p-t-3 p-b-32">
                        <div class="contact100-form-checkbox">
                            <input class="input-checkbox100" id="ckb1" type="checkbox" name="remember-me">
                            <label class="label-checkbox100" for="ckb1" asp-for="RememberMe">

                                @Html.DisplayNameFor(m => m.RememberMe)
                            </label>
                        </div>

                        <div>

                            <a asp-action="ForgotPassword">Forgot your password?</a>
                        </div>
                    </div>

                    <div class="container-login100-form-btn">
                        <button type="submit" class="btn btn-success form-control login100-form-btn " id="#loginbutton">
                            Login
                        </button>
                    </div>

                    <p>
                        <a asp-action="Register">Register as a new user?</a>
                    </p>

                </form>

                <div class="login100-more" style="background-image: url(@Url.Content("~/imagesLogin/istockphoto.jpg"));"> </div>

            </div>


        </div>
    </div>
    <script src="~/js/loginjs/main.js"></script>
</body>

@section scripts{
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}